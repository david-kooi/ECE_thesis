function [M1,TBar] = get_M_TBar_horizon(x_o, u_o)

global A;
global B;
global TBar_arr;
global V;
global Ts_min;
global V_sls_value;
global ctl;

rho = V_sls_value - V(x_o);
x_dot = A*x_o + B*u_o;

% Iterate through multiple values of TBar
T_max = 2;
T_min = Ts_min;
N = 4;
delta = (T_max-T_min) / N;

[Xrange0, Trange0] = get_reach_set_stepped(x_o, u_o, T_max);

Ts_arr = zeros(N, N+1);
for( n0 = 1:N)
   TBar0 = T_min + n0*delta;
   
   idx     = find((Trange0 < TBar0));
   subReach0 = Xrange0(idx, :);
   subTime0  = Trange0(idx,:);
   
   %figure(10);
   %scatter(subReach0(:,1), subReach0(:,2));  
   
   [M0, arg_M] = get_M(x_o, u_o, TBar0, subReach0, subTime0);
   
   Ts0     = get_Ts(x_o, M0, TBar0);
   Ts_arr(n0, 1) = Ts0; 
   
   %% Fill with expansion
   x_1 = arg_M';
   u_1 = ctl(x_1);
   for(n1 = 1:N)
      TBar1 = T_min + n1*delta;
      [Xrange1, Trange1] = get_reach_set_stepped(x_1, u_1, T_max);
      idx = find(Trange1 < TBar1);
      subReach1 =  Xrange1(idx,:);
      subTime1 = Xrange1(idx,:);
      
      %figure(10);
      %scatter(subReach1(:,1), subReach1(:,2));
      %hold on;
      
      M1  = get_M(x_1, u_1, TBar1, subReach1, subTime1);
      Ts1 = get_Ts(x_1, M1, TBar1);
      
      Ts_arr(n0, n1+1) = Ts1;
   end
   
   
end

% Performance = c*Ts0 + (1-c)Ts1, c \in [0,1]
c = 0.5;
P = zeros(N)
for(n = 1:N)
   Ts0 = Ts_arr(n,1);
   P(n, :) = c*Ts0 + (1-c).*Ts_arr(n, 2:end);
    
end


% Minimize positive M
posM_idx = find(M_arr(1,:) > 0);
posM = M_arr(1,posM_idx);
[min_posM, min_posM_idx] = min(posM);

min_posM_dup_idx = find(M_arr(1,:) == min_posM); % Find best duplicate

[max_posM_TBar, max_posM_TBar_idx] = max(M_arr(2, min_posM_dup_idx));


M1 = min_posM;
TBar = max_posM_TBar;

Ts_plus = max(Ts_min, min(TBar, rho/M1)) ;

%% Minimize M
%M_min = min(M_arr(1,:));
%M_min_idx = find(M_arr(1,:) == M_min);
%[TBar_max, TBar_max_idx] = max(M_arr(2,M_min_idx));

%M = M_arr(1,TBar_max_idx);
%TBar = TBar_max;


%% Maximize the sample time

% rho_M = rho./M_arr(1,:);
% Ts_arr = [M_arr(2,:); rho_M];
% 
% th1_min = min(Ts_arr, [], 1);
% Ts = [th1_min ; zeros(1,length(th1_min)) + Ts_min];
% [max_Ts, max_idx] = max(max(Ts));
% 
% M = M_arr(1,max_idx);
% TBar = M_arr(2,max_idx);






end